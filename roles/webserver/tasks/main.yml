---
# T√¢ches principales du r√¥le webserver
# Ce fichier contient toutes les t√¢ches n√©cessaires pour installer et configurer un serveur web

# === V√âRIFICATIONS PR√âLIMINAIRES ===

- name: "Afficher les informations de d√©ploiement"
  debug:
    msg: |
      === CONFIGURATION DU SERVEUR WEB ===
      Serveur: {{ inventory_hostname }}
      OS: {{ ansible_os_family }} {{ ansible_distribution }} {{ ansible_distribution_version }}
      Package: {{ webserver_package_name }}
      Service: {{ webserver_service_name }}
      Port: {{ webserver_port }}
      Document Root: {{ webserver_document_root }}
  tags: [info]

- name: "V√©rifier que le syst√®me est support√©"
  fail:
    msg: "Ce r√¥le supporte uniquement Ubuntu/Debian et CentOS/RHEL. OS d√©tect√©: {{ ansible_os_family }}"
  when: ansible_os_family not in ['Debian', 'RedHat']
  tags: [validation]

# === INSTALLATION DU SERVEUR WEB ===

- name: "Installer le serveur web Apache (Debian/Ubuntu)"
  apt:
    name: "{{ webserver_package_name }}"
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  notify: restart webserver
  tags: [install, packages]

- name: "Installer le serveur web Apache (RedHat/CentOS)"
  yum:
    name: "{{ webserver_package_name }}"
    state: present
  when: ansible_os_family == "RedHat"
  notify: restart webserver
  tags: [install, packages]

- name: "Installer les packages additionnels"
  package:
    name: "{{ webserver_additional_packages }}"
    state: present
  tags: [install, packages]

# === CONFIGURATION DES R√âPERTOIRES ===

- name: "Cr√©er le r√©pertoire DocumentRoot"
  file:
    path: "{{ webserver_document_root }}"
    state: directory
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0755'
  tags: [config, directories]

- name: "Cr√©er le r√©pertoire de logs personnalis√©"
  file:
    path: "{{ webserver_log_dir }}/{{ webserver_site_name }}"
    state: directory
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0755'
  tags: [config, directories]

# === G√âN√âRATION DU CONTENU WEB ===

- name: "G√©n√©rer la page d'accueil depuis le template"
  template:
    src: index.html.j2
    dest: "{{ webserver_document_root }}/index.html"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0644'
    backup: true  # Cr√©e une sauvegarde si le fichier existe d√©j√†
  notify: reload webserver
  tags: [config, content]

- name: "Cr√©er une page d'information syst√®me"
  copy:
    dest: "{{ webserver_document_root }}/info.html"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0644'
    content: |
      <!DOCTYPE html>
      <html>
      <head>
          <title>Informations Syst√®me</title>
          <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              .info { background: #f4f4f4; padding: 20px; border-radius: 5px; }
          </style>
      </head>
      <body>
          <h1>Informations Syst√®me</h1>
          <div class="info">
              <h2>Serveur: {{ inventory_hostname }}</h2>
              <p><strong>Adresse IP:</strong> {{ ansible_default_ipv4.address | default('N/A') }}</p>
              <p><strong>Syst√®me:</strong> {{ ansible_os_family }} {{ ansible_distribution }} {{ ansible_distribution_version }}</p>
              <p><strong>Architecture:</strong> {{ ansible_architecture }}</p>
              <p><strong>Processeur:</strong> {{ ansible_processor[2] | default('N/A') }}</p>
              <p><strong>M√©moire:</strong> {{ ansible_memtotal_mb | default('N/A') }} MB</p>
              <p><strong>D√©ploiement:</strong> {{ ansible_date_time.iso8601 }}</p>
          </div>
          <p><a href="/">&larr; Retour √† l'accueil</a></p>
      </body>
      </html>
  tags: [config, content]

# === CONFIGURATION DU SERVICE ===

- name: "D√©marrer et activer le service web"
  service:
    name: "{{ webserver_service_name }}"
    state: started
    enabled: true
  tags: [service]

- name: "V√©rifier que le service est d√©marr√©"
  service:
    name: "{{ webserver_service_name }}"
    state: started
  register: service_status
  tags: [validation, service]

- name: "Afficher le statut du service"
  debug:
    msg: |
      Service {{ webserver_service_name }}: {{ service_status.state | default('inconnu') }}
      {% if service_status.state == 'started' %}
      ‚úÖ Le service est d√©marr√© correctement
      {% else %}
      ‚ùå Probl√®me avec le service
      {% endif %}
  tags: [info, validation]

# === CONFIGURATION FIREWALL (OPTIONNEL) ===

- name: "Ouvrir les ports du firewall (si activ√©)"
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  loop: "{{ webserver_firewall_ports }}"
  when: 
    - webserver_configure_firewall | bool
    - ansible_os_family == "RedHat"
  ignore_errors: true  # Continue m√™me si firewalld n'est pas install√©
  tags: [firewall, security]

- name: "Ouvrir les ports UFW (Ubuntu/Debian)"
  ufw:
    rule: allow
    port: "{{ item.split('/')[0] }}"
    proto: "{{ item.split('/')[1] }}"
  loop: "{{ webserver_firewall_ports }}"
  when: 
    - webserver_configure_firewall | bool
    - ansible_os_family == "Debian"
  ignore_errors: true  # Continue m√™me si ufw n'est pas install√©
  tags: [firewall, security]

# === VALIDATION FINALE ===

- name: "V√©rifier que le port est en √©coute"
  wait_for:
    port: "{{ webserver_port }}"
    host: "{{ ansible_default_ipv4.address | default('127.0.0.1') }}"
    delay: 2
    timeout: 30
  tags: [validation, connectivity]

- name: "Tester la page d'accueil en local"
  uri:
    url: "http://127.0.0.1:{{ webserver_port }}"
    method: GET
    status_code: 200
  register: homepage_test
  ignore_errors: true
  tags: [validation, http]

- name: "Afficher le r√©sultat des tests"
  debug:
    msg: |
      === R√âSULTATS DE LA VALIDATION ===
      
      {% if homepage_test.status == 200 %}
      ‚úÖ Le serveur web r√©pond correctement
      üì± Page d'accueil accessible sur: http://{{ ansible_default_ipv4.address | default('localhost') }}:{{ webserver_port }}
      üìä Page d'info syst√®me: http://{{ ansible_default_ipv4.address | default('localhost') }}:{{ webserver_port }}/info.html
      {% else %}
      ‚ùå Probl√®me d√©tect√©: {{ homepage_test.msg | default('Erreur inconnue') }}
      {% endif %}
      
      üîß Pour d√©boguer:
        - Logs du service: sudo journalctl -u {{ webserver_service_name }}
        - Statut du service: sudo systemctl status {{ webserver_service_name }}
        - Test manuel: curl http://localhost:{{ webserver_port }}
  tags: [info, validation]

# === T√ÇCHES DE NETTOYAGE ===

- name: "Supprimer la page par d√©faut d'Apache (si elle existe)"
  file:
    path: "{{ webserver_document_root }}/index.html"
    state: absent
  when: false  # D√©sactiv√© par d√©faut, peut √™tre activ√© si n√©cessaire
  tags: [cleanup]